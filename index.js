require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');

const token = process.env.TELEGRAM_BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });

console.log('ü§ñ Telegram Shop Bot –∑–∞–ø—É—â–µ–Ω!');

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const userName = msg.from.first_name;

  const keyboard = {
    reply_markup: {
      keyboard: [
        [{
          text: "üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω",
          web_app: { url: process.env.SHOP_URL }
        }]
      ],
      resize_keyboard: true
    }
  };

  bot.sendMessage(chatId, 
    `–ü—Ä–∏–≤–µ—Ç, ${userName}! üëã

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à Telegram –º–∞–≥–∞–∑–∏–Ω! üõçÔ∏è

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω –ø—Ä—è–º–æ –≤ Telegram:`, 
    keyboard
  );
});

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;
  
  bot.sendMessage(chatId,
    `üìñ **–ü–æ–º–æ—â—å –ø–æ –º–∞–≥–∞–∑–∏–Ω—É**

‚Ä¢ üõçÔ∏è –ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω" –¥–ª—è –ø–æ–∫—É–ø–æ–∫
‚Ä¢ üí¨ –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ @username
‚Ä¢ üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start

–ù–∞—à —Å–∞–π—Ç: ${process.env.SHOP_URL}`
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App
bot.on('message', async (msg) => {
  if (msg.web_app_data) {
    try {
      const data = JSON.parse(msg.web_app_data.data);
      console.log('–î–∞–Ω–Ω—ã–µ –∏–∑ Web App:', data);
      
      if (data.type === 'order') {
        await processOrder(msg, data);
      }
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Web App –¥–∞–Ω–Ω—ã—Ö:', error);
      bot.sendMessage(msg.chat.id, '‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞');
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞
async function processOrder(msg, orderData) {
  const chatId = msg.chat.id;
  const user = msg.from;

  try {
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ
    const orderMessage = `
üõí **–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #${orderData.orderId}**

**–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:** ${user.first_name} ${user.last_name || ''}
**Username:** @${user.username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}
**ID:** ${user.id}

**–¢–æ–≤–∞—Ä—ã:**
${orderData.items.map(item => `‚Ä¢ ${item.name} √ó ${item.quantity} = ${item.price * item.quantity} ‚ÇΩ`).join('\n')}

**üí∞ –ò—Ç–æ–≥–æ:** ${orderData.total} ‚ÇΩ

**üìÖ –î–∞—Ç–∞:** ${new Date().toLocaleString('ru-RU')}
    `.trim();

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    if (process.env.ADMIN_CHAT_ID) {
      await bot.sendMessage(process.env.ADMIN_CHAT_ID, orderMessage, { parse_mode: 'Markdown' });
    }

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.sendMessage(chatId,
      `‚úÖ **–ó–∞–∫–∞–∑ #${orderData.orderId} –ø—Ä–∏–Ω—è—Ç!**

–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! üéâ

–í–∞—à –∑–∞–∫–∞–∑:
${orderData.items.map(item => `‚Ä¢ ${item.name} √ó ${item.quantity}`).join('\n')}

**–ò—Ç–æ–≥–æ: ${orderData.total} ‚ÇΩ**

–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞. üìû`,
      { parse_mode: 'Markdown' }
    );

    console.log(`–ó–∞–∫–∞–∑ #${orderData.orderId} –æ–±—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.id}`);

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
    await bot.sendMessage(chatId, 
      '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.'
    );
  }
}

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
bot.onText(/\/admin/, (msg) => {
  const userId = msg.from.id;
  
  if (userId.toString() === process.env.ADMIN_ID) {
    bot.sendMessage(msg.chat.id, 'üëë **–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞**', {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [[
          {
            text: "üìä –û—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω–∫—É",
            web_app: { url: `${process.env.SHOP_URL}/admin` }
          }
        ]]
      }
    });
  } else {
    bot.sendMessage(msg.chat.id, '‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

bot.on('polling_error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ polling:', error);
});

console.log('‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...');
